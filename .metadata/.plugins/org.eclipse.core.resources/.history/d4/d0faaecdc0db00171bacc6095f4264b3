<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:property-placeholder location="classpath:db.properties" />
	<context:component-scan base-package="com.cioclass"
                            use-default-filters="true">
        <context:exclude-filter type="regex" expression="com.cioclass.dao.sys.*"/>
    </context:component-scan>
	<!--1 配置数据源 -->
	<!-- <bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="username" value="root" />
		<property name="password" value="789123" />
		<property name="url" value="jdbc:mysql:///spring_data?useSSL=false" />
	</bean> -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${spring.datasource.driver-class-name}" />
		<property name="username" value="${spring.datasource.username}" />
		<property name="password" value="${spring.datasource.password}" />
		<property name="url" value="${spring.datasource.url}" />
	</bean>
	<!-- SQL Server 的连接配置 -->
	<!-- 
	<bean id="sqlDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/>
		<property name="url" value="jdbc:sqlserver://127.0.0.1:1433;instanceName=MSSQLSERVER2;databaseName=SMB6Comp02;"/>
		<property name="username" value="sa"/>
		<property name="password" value="clb6962091290fj."/>
	</bean>
	<bean id="sqlSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="sqlDataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.cioclass.dao</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>
	 -->
	<!--2 配置EntityManagerFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.cioclass</value>
			</list>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.show_sql">${spring.jpa.show-sql}</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">${spring.jpa.hibernate.ddl-auto}</prop>
			</props>
		</property>
	</bean>
	
	<!--3 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!--4 配置支持注解的事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!--5 配置spring data -->
	<!--<jpa:repositories base-package="com.cioclass" entity-manager-factory-ref="entityManagerFactory"/>-->
	<!--
	<jpa:repositories base-package="com.cioclass"
		repository-impl-postfix="Impl"
		query-lookup-strategy = "create-if-not-found"
		factory-class="com.cioclass.dao.impl.BaseDaoFactoryBean"
		entity-manager-factory-ref="entityManagerFactory" transaction-manager-ref="transactionManager">
		</jpa:repositories>-->
	<jpa:repositories base-package="com.cioclass"
		entity-manager-factory-ref="entityManagerFactory"
		transaction-manager-ref="transactionManager">
	</jpa:repositories>
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<!-- 开启这个配置，spring才能识别@Scheduled注解 -->
	<task:annotation-driven />
	<import resource="classpath:mvc_security.xml"/>
	<import resource="classpath:spring_redis.xml"/>
	
</beans>