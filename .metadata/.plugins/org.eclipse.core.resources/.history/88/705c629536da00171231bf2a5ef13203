package com.cioclass.controller;

import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import java.util.Map;
import java.util.Map.Entry;

import javax.servlet.ServletContext;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.ResultActions;
import org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;

import com.cioclass.util.GlobalConstant;

public class ControllerTestUtil {
	private static final boolean ENVI = GlobalConstant.ENVI;

	@Autowired
	ServletContext context;

	/**
	 * 进行get的controller的测试
	 * 
	 * @param uri
	 *            测试的URI,默认包含最前面的斜杠（根目录）
	 * @param vars
	 *            参数,如果没有参数，则直接赋值为null
	 * @param method
	 *            测试的方法访问控制符
	 * @param controllers
	 *            controller的对象
	 */
	public static void testController(String uri, Map<String, Object> vars, String method, Object... controllers) {
		ResultActions resultActions;
		try {
			MockHttpServletRequestBuilder rb = null;
			/* 方法的访问方式(post/get)*/
			if (method != null && "get".equals(method)) {
				rb = MockMvcRequestBuilders.get("/" + uri);
			} else if (method != null && "post".equals(method)) {
				rb = MockMvcRequestBuilders.post("/" + uri);
			}
			rb.accept(MediaType.APPLICATION_JSON_UTF8);
			/* 参数赋值*/
			if (vars != null) {
				for (Entry<String, Object> entry : vars.entrySet()) {
					rb = ((MockHttpServletRequestBuilder) rb).param(entry.getKey(), entry.getValue()+"");
				}
			}
			resultActions = MockMvcBuilders.standaloneSetup(controllers).build().perform(rb);
			resultActions.andExpect(status().isOk());
			/*如果是生产环境，则打印出请求全过程*/
			if (ENVI) {
				resultActions.andDo(print());
				/* MvcResult mvcResult = resultActions.andReturn();*/
				/* String result = mvcResult.getResponse().getContentAsString();*/
				/* System.out.println("=====客户端获得Controller反馈数据:\n" + result);*/
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
