/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.47
 * Generated at: 2018-01-18 01:02:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.content.or;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class qrcode4XSBatchNo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\" name=\"viewport\">\r\n");
      out.write("<title>二维码内容信息页</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/statics/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/page.css\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("#updateInfo{min-width:300px;min-height:400px;width:40%;height:50%;display:block;position:fixed;top:5%;left:30%;right:30%;background-color:#fff}\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/bootstrap.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<button onclick=\"fresh()\">刷新</button>\r\n");
      out.write("\r\n");
      out.write("<select name=\"active\" id=\"active\">\r\n");
      out.write("  <option value =\"ACTIVATION\" selected=\"selected\">激活</option>\r\n");
      out.write("  <option value =\"AUDIT\">待审核</option>\r\n");
      out.write("  <option value =\"NOT_ACTIVE\">未激活</option>\r\n");
      out.write("</select>\r\n");
      out.write("<button onclick=\"active_change()\">改变激活状态</button>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<select name=\"state\" id=\"state\">\r\n");
      out.write("  <option value =\"VALID\" selected=\"selected\">生效</option>\r\n");
      out.write("  <option value =\"AUDIT\">待审核</option>\r\n");
      out.write("  <option value =\"INVALID\">失效</option>\r\n");
      out.write("  <option value =\"TAKE_EFFECT\">未生效</option>\r\n");
      out.write("</select>\r\n");
      out.write("<button onclick=\"state_change()\">改变状态</button>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<button data-toggle=\"modal\" data-target=\"#updateInfo\" onclick=\"updateInfo()\">批次修改信息</button>\r\n");
      out.write("<button onclick=\"update()\">确定批次修改</button>\r\n");
      out.write("\r\n");
      out.write("<button onclick=\"deletes()\">确定批次删除</button>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("选择商家：\r\n");
      out.write("<select name=\"en\" id=\"en\">\r\n");
      out.write("  <option value =\"43\" selected=\"selected\">请选择商家</option>\r\n");
      out.write("</select>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("选择批次：\r\n");
      out.write("<select name=\"bn\" id=\"bn\">\r\n");
      out.write("  <option value =\"12\" selected=\"selected\">请选择批次</option>\r\n");
      out.write("</select>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("每页显示条数：\r\n");
      out.write("<select name=\"perPage\" id=\"perpage\">\r\n");
      out.write("  <option value =\"5\">5</option>\r\n");
      out.write("  <option value =\"10\">10</option>\r\n");
      out.write("  <option value =\"20\" selected=\"selected\">20</option>\r\n");
      out.write("  <option value =\"30\">30</option>\r\n");
      out.write("  <option value =\"50\">50</option>\r\n");
      out.write("</select>\r\n");
      out.write("<br>\r\n");
      out.write("<!-- 分页的内容 -->\r\n");
      out.write("<div id=\"pages\" class=\"pages\"></div>\r\n");
      out.write("<!-- 分页的组件 -->\r\n");
      out.write("<div class=\"page\"></div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"modal fade\" id=\"updateInfo\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t<div class=\"modal-header\">\r\n");
      out.write("\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\r\n");
      out.write("\t\t<h3 id=\"myModalLabel\">修改信息</h3>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"modal-body\">\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<form id=\"updateInfoForm\" class=\"updateInfoForm\" role=\"form\" action=\"javaScript:void(0);\">\r\n");
      out.write("\t\t\t\t<div id=\"myTabContent\" class=\"tab-content\">\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"batchId_form\">批次编号</label>\r\n");
      out.write("\t\t\t\t\t\t<select name=\"batchId_form\" id=\"batchId_form\">\r\n");
      out.write("\t\t\t\t\t\t  <option value =\"-1\">未生效</option>\r\n");
      out.write("\t\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"active_from\">激活状态</label>\r\n");
      out.write("\t\t\t\t\t\t<select name=\"active_from\" id=\"active_from\">\r\n");
      out.write("\t\t\t\t\t\t  <option value =\"ACTIVATION\" selected=\"selected\">激活</option>\r\n");
      out.write("\t\t\t\t\t\t  <option value =\"AUDIT\">待审核</option>\r\n");
      out.write("\t\t\t\t\t\t  <option value =\"NOT_ACTIVE\">未激活</option>\r\n");
      out.write("\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"state_form\">状态</label>\r\n");
      out.write("\t\t\t\t\t\t<select name=\"state_form\" id=\"state_form\">\r\n");
      out.write("\t\t\t\t\t\t  <option value =\"VALID\" selected=\"selected\">生效</option>\r\n");
      out.write("\t\t\t\t\t\t  <option value =\"AUDIT\">待审核</option>\r\n");
      out.write("\t\t\t\t\t\t  <option value =\"INVALID\">失效</option>\r\n");
      out.write("\t\t\t\t\t\t  <option value =\"TAKE_EFFECT\">未生效</option>\r\n");
      out.write("\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"remark_form\">备注</label>\r\n");
      out.write("\t\t\t\t\t\t<input id=\"remark_form\" name=\"remark_form\" type=\"text\" class=\"form-control\" placeholder=\"请输入备注信息\">\r\n");
      out.write("\t\t\t\t\t\t<span class=\"help-block\">请输入备注信息</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>  \r\n");
      out.write("\t<div class=\"modal-footer\">  \r\n");
      out.write("\t    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">确认</button>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script id=\"page-template\" type=\"text/x-handlebars-template\">\r\n");
      out.write("\t<div>每页最多{{size}}条记录,此页共计{{numberOfElements}}条记录</div>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<table class=\"table\" border=\"1\">\r\n");
      out.write("\t\t\t<caption>分类列表</caption>\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th><input type=\"checkbox\" name=\"id_s\" class=\"checkAll\" onchange=\"checkAll_event()\"></th>\r\n");
      out.write("\t\t\t\t\t<th>编号</th>\r\n");
      out.write("\t\t\t\t\t<th>企业号</th>\r\n");
      out.write("\t\t\t\t\t<th>批次号</th>\r\n");
      out.write("\t\t\t\t\t<th>流水号</th>\r\n");
      out.write("\t\t\t\t\t<th>批次编号</th>\r\n");
      out.write("\t\t\t\t\t<th>防伪码</th>\r\n");
      out.write("\t\t\t\t\t<th>状态</th>\r\n");
      out.write("\t\t\t\t\t<th>激活状态</th>\r\n");
      out.write("\t\t\t\t\t<th>更新时间</th>\r\n");
      out.write("\t\t\t\t\t<th>创建时间</th>\r\n");
      out.write("\t\t\t\t\t<th>备注</th>\r\n");
      out.write("\t\t\t\t\t<th>操作</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t{{#each content}}\r\n");
      out.write("\t\t\t\t<tr class=\"h\" ondblclick=\"getOne('{{id}}')\">\r\n");
      out.write("\t\t\t\t\t<td><input type=\"checkbox\" name=\"ids\" value=\"{{id}}\" class=\"checkOne\"></td>\r\n");
      out.write("\t\t\t\t\t<td>{{id}}</td>\r\n");
      out.write("\t\t\t\t\t<td>{{en}}</td>\r\n");
      out.write("\t\t\t\t\t<td>{{bn}}</td>\r\n");
      out.write("\t\t\t\t\t<td>{{num}}</td>\r\n");
      out.write("\t\t\t\t\t<td>{{getBatchId batchId}}</td>\r\n");
      out.write("\t\t\t\t\t<td>{{code}}</td>\r\n");
      out.write("\t\t\t\t\t<td>{{getState status}}</td>\r\n");
      out.write("\t\t\t\t\t<td>{{getActive activateStatus}}</td>\r\n");
      out.write("\t\t\t\t\t<td>{{updateTime}}</td>\r\n");
      out.write("\t\t\t\t\t<td>{{createTime}}</td>\r\n");
      out.write("\t\t\t\t\t<td>{{remark}}</td>\r\n");
      out.write("\t\t\t\t\t<td><a href=\"javaScript:deleteById('{{id}}')\">删除</a></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t{{/each}}\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("</script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/jquery.page.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/handlebars.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/common.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/or/qrcode4XSBatchNo.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
